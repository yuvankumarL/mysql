
// Foriegn key

// we already have 3 tables employees, transaction, products

// create a new table customers

CREATE TABLE customers (
	customer_id INT PRIMARY KEY,
    first_name VARCHAR(25),
    last_name VARCHAR(25)
);

SELECT * FROM customers;


//
ALTER TABLE customers
MODIFY transaction_id INT AUTO_INCREMENT;


// insert values
INSERT INTO customers (first_name, last_name)
VALUES ("Dhoni", "MS"),
	   ("Virat", "Kolhi"),
       ("Suresh", "Raina");

SELECT * FROM customers;

--> 3 rows inserted


// drop table transactions and 
// create with foriegn key

CREATE TABLE transactions (
	transaction_id INT PRIMARY KEY AUTO_INCREMENT,
    amount DECIMAL (4, 2),
    customer_id INT,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


// remove foriegn key
// there is already a foriegn key (transactions_ibfk_1) is present delete it


//
ALTER TABLE transactions 
DROP FOREIGN KEY transactions_ibfk_1;


// ADD foriegn key

// 1
ALTER TABLE transactions 
ADD CONSTRAINT fk_customer_id
FOREIGN KEY (customer_id) REFERENCES customers(customer_id);

--> now foriegn key added


// 2
ALTER TABLE transactions 
FOREIGN KEY (customer_id) REFERENCES customers(customer_id);


// Increase the Auto Increment

ALTER TABLE transactions 
AUTO_INCREMENT = 1000;

SELECT * FROM transactions;

//
INSERT INTO transactions (amount, customer_id)
VALUES (4.99, 3),
	   (2.89, 2),
       (3.38, 3),
       (4.99, 1);

SELECT * FROM transactions;

--> 4 rows inserted


// lets try to delete a customer
DELETE FROM customers
WHERE customer_id = 3;

--> error: cannot delete or update a parent row: a foriegn constraint fails

// let us discuss the use of foreign in joins
